{% set strategy = getv("/rundeck/logging/strategy", "CONSOLE") %}
{% set appender = "org.apache.log4j.ConsoleAppender" %}

{% if strategy == "FILE" %}
    {% set appender = "org.apache.log4j.DailyRollingFileAppender" %}
{% endif %}

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} %c{1} - %m%n
# Enable logging for everything. Rarely useful
log4j.rootLogger=debug, stdout {% if strategy == "FILE" %}, file{% endif %}

# Enable audit logging
{% if exists("/rundeck/logging/audit/enabled") %}
log4j.logger.com.dtolabs.rundeck.core.authorization=info, audit
log4j.additivity.com.dtolabs.rundeck.core.authorization=false
{% endif %}

# Enable options remote URL logging
log4j.logger.com.dtolabs.rundeck.remoteservice.http.options=INFO, options
log4j.additivity.com.dtolabs.rundeck.remoteservice.http.options=false

# Enable Job changes logging
log4j.logger.com.dtolabs.rundeck.data.jobs.changes=INFO, jobchanges
log4j.additivity.com.dtolabs.rundeck.data.jobs.changes=false

# Enable Execution event logging
log4j.logger.org.rundeck.execution.status=INFO, execevents
log4j.additivity.org.rundeck.execution.status=false

# Enable API request logging
log4j.logger.org.rundeck.api.requests=INFO,apirequests
log4j.additivity.org.rundeck.api.requests=false

# Enable Web access logging
log4j.logger.org.rundeck.web.requests=INFO,access
log4j.additivity.org.rundeck.web.requests=false

# Enable project logging
log4j.logger.org.rundeck.project.events=INFO,project
log4j.additivity.org.rundeck.project.events=false

# Enable Storage logging
log4j.logger.org.rundeck.storage.events=INFO,storage
log4j.additivity.org.rundeck.storage.events=false

# Enable Project manager logging
log4j.logger.grails.app.services.rundeck.services.ProjectManagerService=INFO,stdout
log4j.additivity.grails.app.services.rundeck.services.ProjectManagerService=false

# Enable this logger to log Hibernate output
# handy to see its database interaction activity
#log4j.logger.org.hibernate=debug,stdout
#log4j.additivity.org.hibernate=false

# Enable this logger to see what Spring does, occasionally useful
#log4j.logger.org.springframework=info,stdout 
#log4j.additivity.org.springframework=false

# This logger covers all of Grails' internals
# Enable to see whats going on underneath. 
log4j.logger.org.codehaus.groovy.grails=warn,stdout
log4j.additivity.org.codehaus.groovy.grails=false

# This logger is useful if you just want to see what Grails
# configures with Spring at runtime. Setting to debug will show
# each bean that is configured
log4j.logger.org.codehaus.groovy.grails.commons.spring=warn,stdout
log4j.additivity.org.codehaus.groovy.grails.commons.spring=false  
                          
# Interesting Logger to see what some of the Grails factory beans are doing
log4j.logger.org.codehaus.groovy.grails.beans.factory=warn,stdout
log4j.additivity.org.codehaus.groovy.grails.beans.factory=false

# This logger is for Grails' public APIs within the grails. package
log4j.logger.grails=warn,stdout
log4j.additivity.grails=false        

#
# file - DailyRollingFileAppender
#
{% if appender == "FILE" %}
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.file=/home/rundeck/server/logs${file.separator}rundeck.log
log4j.appender.file.datePattern='.'yyyy-MM-dd
log4j.appender.file.append=true
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} [%t] - %m%n
{% endif %}


#log4j.logger.org.codehaus.groovy.grails.plugins.quartz=debug,stdout
#log4j.additivity.org.codehaus.groovy.grails.plugins.quartz=false

#
# audit 
#
log4j.appender.audit={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.audit.file=/home/rundeck/server/logs${file.separator}rundeck.audit.log
log4j.appender.audit.append=true
{% endif %}
log4j.appender.audit.layout=org.apache.log4j.PatternLayout
log4j.appender.audit.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} - %m%n

#
# options log
#
# Logs remote HTTP requests for Options JSON data
#
log4j.appender.options={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.options.file=/home/rundeck/server/logs${file.separator}rundeck.options.log
log4j.appender.options.append=true
{% endif %}
log4j.appender.options.layout=org.apache.log4j.PatternLayout
log4j.appender.options.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} %X{httpStatusCode} %X{contentLength}B %X{durationTime}ms %X{lastModifiedDateTime} [%X{jobName}] %X{url} %X{contentSHA1}%n

#
# storage log
#
# Logs events for Rundeck storage layer
#
log4j.appender.storage={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.storage.file=/home/rundeck/server/logs${file.separator}rundeck.storage.log
log4j.appender.storage.append=true
{% endif %}
log4j.appender.storage.layout=org.apache.log4j.PatternLayout
log4j.appender.storage.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} %X{action} %X{type} %X{path} %X{status} %X{metadata}%n

#
# job changes log
#
# Logs all Job definition changes
#
log4j.appender.jobchanges={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.jobchanges.file=/home/rundeck/server/logs${file.separator}rundeck.jobs.log
log4j.appender.jobchanges.append=true
{% endif %}
log4j.appender.jobchanges.layout=org.apache.log4j.PatternLayout
log4j.appender.jobchanges.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} %X{user} %X{change} [%X{id}] %X{project} "%X{groupPath}/%X{jobName}" (%X{method})%X{extraInfo}%n

#
# executions log
#
# Logs all execution events (start,finish,delete)
#
log4j.appender.execevents={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.execevents.file=/home/rundeck/server/logs${file.separator}rundeck.executions.log
log4j.appender.execevents.append=true
{% endif %}
log4j.appender.execevents.layout=org.apache.log4j.PatternLayout
log4j.appender.execevents.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} %X{eventUser} %X{event} [%X{id}:%X{state}] %X{project} %X{user}/%X{abortedby} "%X{groupPath}/%X{jobName} %X{argString}"[%X{uuid}] %n

#
# api request log
#
# Logs all API requests
#
log4j.appender.apirequests={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.apirequests.file=/home/rundeck/server/logs${file.separator}rundeck.api.log
log4j.appender.apirequests.append=true
{% endif %}
log4j.appender.apirequests.layout=org.apache.log4j.PatternLayout
log4j.appender.apirequests.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} "%X{method} %X{uri}" %X{remoteHost} %X{secure} %X{remoteUser} %X{authToken} %X{duration} %X{project} (%X{userAgent})%n

#
# Web access log
#
# Logs all Web requests
#
log4j.appender.access={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.access.file=/home/rundeck/server/logs${file.separator}rundeck.access.log
log4j.appender.access.append=true
{% endif %}
log4j.appender.access.layout=org.apache.log4j.PatternLayout
log4j.appender.access.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} "%X{method} %X{uri}" %X{remoteHost} %X{secure} %X{remoteUser} %X{authToken} %X{duration} %X{project} [%X{contentType}] (%X{userAgent})%n

#
# project log
#
# Logs Project changes
#
log4j.appender.project={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.project.file=/home/rundeck/server/logs${file.separator}rundeck.project.log
log4j.appender.project.append=true
{% endif %}
log4j.appender.project.layout=org.apache.log4j.PatternLayout
log4j.appender.project.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} - %m%n
# Enable cluster-messages logging
log4j.logger.org.rundeck.messaging.events=INFO,messaging
log4j.additivity.org.rundeck.messaging.events=false
#
# cluster-messages log
#
# Logs cluster messages
#
log4j.appender.messaging={{ appender }}
{% if strategy == "FILE" %}
log4j.appender.messaging.file=/home/rundeck/server/logs${file.separator}rundeck.cluster.messages.log
log4j.appender.messaging.append=true
{% endif %}
log4j.appender.messaging.layout=org.apache.log4j.PatternLayout
log4j.appender.messaging.layout.ConversionPattern=[%d{ISO8601}] %-5p %c{2} - id[%X{id}] namespace[%X{namespace}] topic[%X{topic}] type[%X{type}] sender[%X{sender}] state[%X{state}] destination[%X{destination}] %m%n