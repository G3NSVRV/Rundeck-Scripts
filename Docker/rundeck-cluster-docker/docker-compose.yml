version: '3'

volumes:
  db-data:
  minio-data:

services:
  rundeck_01:
    hostname: ${RD_HOSTNAME}
    build:
      context: ${RD_CONTEXT}
      args:
        IMAGE: ${RD_IMAGE}
    deploy:
      resources:
        limits:
          memory: ${RD_MEM}
    platform: linux/amd64
    links:
      - database
      - minio
    expose:
      - ${RD_PORT_01}
    env_file:
      - rundeck/environment.file
    environment:
      RUNDECK_SERVER_UUID: ${RD_UUID_01}
  rundeck_02:
    hostname: ${RD_HOSTNAME}
    build:
      context: ${RD_CONTEXT}
      args:
        IMAGE: ${RD_IMAGE}
    deploy:
      resources:
        limits:
          memory: ${RD_MEM}
    platform: linux/amd64
    links:
      - database
      - minio
    expose:
      - ${RD_PORT_01}
    env_file:
      - rundeck/environment.file
    environment:
      RUNDECK_SERVER_UUID: ${RD_UUID_02}
  database:
    hostname: ${RD_JDBC_ENGINE}
    image: ${DB_IMAGE}
    deploy:
      resources:
        limits:
          memory: ${DB_MEM}
    volumes:
      - db-data:/var/lib/postgresql/data        
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
  minio:
    hostname: 'minio'
    image: ${MINIO_IMAGE}
    deploy:
      resources:
        limits:
          memory: ${MINIO_MEM}
    volumes:
      - minio-data:/data
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS}
      MINIO_REGION_NAME: ${RD_STORAGE_REGION}
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
  mc:
    image: ${MC_IMAGE}
    links:
      - minio
    depends_on:
      - minio
    entrypoint: >
      /bin/bash -c "
      mc config host add --api s3v4 minio ${RD_STORAGE_ENDPOINT}:${MINIO_PORT} ${MINIO_USER} ${MINIO_PASS};
      mc mb minio/${RD_STORAGE_BUCKET};
      mc policy set public minio/${RD_STORAGE_BUCKET};
      curl -s -D - ${RD_STORAGE_ENDPOINT} | grep  X-Amz-Bucket-Region | sed 's/X-Amz-Bucket-Region/Region/g'
      "
  nginx:
    hostname: ${RD_HOSTNAME}
    build:
      context: ${NGINX_CONTEXT}
      args:
        IMAGE: ${NGINX_IMAGE}
        RD_PORT_01: ${RD_PORT_01}
        RD_PORT_02: ${RD_PORT_02}
        RD_PROTOCOL: ${RD_PROTOCOL}
        RD_HOSTNAME: ${RD_HOSTNAME}
    links:
      - rundeck_01
      - rundeck_02
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    environment:
      NGINX_HOSTNAME: ${RD_PROTOCOL}://${RD_HOSTNAME}
      NGINX_PORT: ${NGINX_PORT}
  node_01:
    hostname: 'node_01'
    build:
      context: ${NODE_CONTEXT}
      args:
        IMAGE: ${NODE_IMAGE}
        NODE_PASS: ${NODE_PASS}
    links:
      - rundeck_01
      - rundeck_02
    ports:
      - ${NODE_PORT}:22
