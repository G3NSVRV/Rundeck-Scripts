<joblist>
  <job>
    <context>
      <options preserveOrder='true'>
        <option name='error' values='ERROR' valuesListDelimiter=',' />
      </options>
    </context>
    <defaultTab>output</defaultTab>
    <description><![CDATA[Captures an ERROR string from a script output and FAIL JOB based in that
]]></description>
    <executionEnabled>true</executionEnabled>
    <group>RuleSets</group>
    <id>8aeccf97-1550-450f-9493-e42d8fb1d855</id>
    <loglevel>INFO</loglevel>
    <name>CaptureErrorLogAndFail</name>
    <nodeFilterEditable>false</nodeFilterEditable>
    <plugins />
    <scheduleEnabled>true</scheduleEnabled>
    <schedules />
    <sequence keepgoing='true' strategy='ruleset'>
      <command>
        <description>This step represents the required script </description>
        <errorhandler>
          <exec>echo no funciona</exec>
        </errorhandler>
        <plugins>
          <LogFilter type='key-value-data'>
            <config>
              <logData>true</logData>
              <regex>^.*(ERROR)(.*)$</regex>
            </config>
          </LogFilter>
        </plugins>
        <script><![CDATA[#!/bin/bash

echo Start script....

echo @option.error@ An error has been occurred

echo Script finishes OK]]></script>
        <scriptargs />
      </command>
      <command>
        <description>This step Exports the captured data to Global</description>
        <errorhandler keepgoingOnSuccess='true'>
          <exec>echo THERE IS NO ERROR</exec>
        </errorhandler>
        <step-plugin type='export-var'>
          <configuration>
            <entry key='export' value='ERROR' />
            <entry key='group' value='export' />
            <entry key='value' value='${data.ERROR*}' />
          </configuration>
        </step-plugin>
      </command>
      <command>
        <description>This step forces the Job to FAIL</description>
        <step-plugin type='flow-control'>
          <configuration>
            <entry key='fail' value='true' />
            <entry key='halt' value='true' />
            <entry key='status' value='AN ERROR HAS BEEN DETECTED' />
          </configuration>
        </step-plugin>
      </command>
      <pluginConfig>
        <WorkflowStrategy>
          <ruleset>
            <rules><![CDATA[[*] run-in-sequence

# STEP 1 is is the Original Script,  captures ERROR value and exports variable to Global Context.
# if necessary, performs any required steps BEFORE or AFTER the script
# step 2 is the export for the value
# step 3 is just an echo of the export value
[1] run-at-start
[2] run-after:1

#if an "ERROR" message is present in Script Output, the Job should FAIL 
[3] if:export.ERROR==export.ERROR]]></rules>
          </ruleset>
        </WorkflowStrategy>
      </pluginConfig>
    </sequence>
    <uuid>8aeccf97-1550-450f-9493-e42d8fb1d855</uuid>
  </job>
</joblist>
